# Github action script for building windows executables of this project
# Copyright (C) 2022  Plnguins

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.

# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
name: Windows build

on:
  push:
    tags:
      - "*"
    branches-ignore:
      - "dependabot/**"
    paths-ignore:
      - "docs/**"
      - "**.md"
      - "LICENSE.txt"
      - ".github/**"
      - "!.github/workflows/windows-build.yml"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - "LICENSE.txt"
      - ".github/**"
      - "!.github/workflows/windows-build.yml"

env:
  BUILD_TYPE: Debug
  QT_VERSION: "6.2.4"
  QT_DIR: ${{ github.workspace }}
  QT_ARCH: "win64_msvc2019_64"
  QT_TOOLS: "tools_ifw"
  BOOST_PLATFORM: 2019
  BOOST_VERSION: "1.79.0"
  BOOST_DIR: ${{ github.workspace }}

jobs:
  windows:
    name: Windows
    runs-on: windows-2019
    strategy:
      matrix:
        arch: [x64]
    steps:
      - name: Change to Release if tag
        if: startsWith(github.ref, 'refs/tags/')
        run: echo "BUILD_TYPE=Release" >> $env:GITHUB_ENV
      - uses: actions/checkout@v3
        name: Clone
        with:
          submodules: recursive
      - name: Install Qt
        uses: jurplel/install-qt-action@43ec12788e42f375acfcb2cec059edfb9572fbaa
        with:
          cache: true
          cache-key-prefix: ${{ runner.os }}-Qt-${{ env.QT_VERSION }}-${{ env.QT_DIR }}-${{ env.QT_ARCH }}-${{ env.QT_TOOLS }}
          version: ${{ env.QT_VERSION }}
          dir: ${{ env.QT_DIR }}
          host: "windows"
          arch: ${{ env.QT_ARCH }}
          target: "desktop"
          setup-python: "false"
          tools: ${{ env.QT_TOOLS }}
      - name: Install boost
        id: install-boost
        uses: MarkusJx/install-boost@v2.4.4
        with:
          boost_version: ${{ env.BOOST_VERSION }}
          platform_version: ${{ env.BOOST_PLATFORM }}
          toolset: msvc
          boost_install_dir: ${{ env.BOOST_DIR }}
          cache: true
      - name: Setup PATH
        run: echo 'C:\Program Files\PostgreSQL\14\bin;C:\Program Files\PostgreSQL\14;C:\Program Files\PostgreSQL\14\include;${{ env.BOOST_DIR}}/boost/boost' | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Configure CMake
        run: cmake -B ${{ github.workspace }}\build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DBoost_INCLUDE_DIR=${{ env.BOOST_DIR }}/boost/boost/include -DBoost_LIBRARY_DIRS=${{ env.BOOST_DIR }}/boost/boost/lib -DPostgreSQL_ADDITIONAL_VERSIONS=14 -DPOSTGRESQL_INCLUDE_DIR='C:\Program Files\PostgreSQL\14\include'
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --parallel --config ${{ env.BUILD_TYPE }}
      - name: Create Setup
        run: ${{ env.IQTA_TOOLS }}\QtInstallerFramework\4.5\bin\binarycreator.exe -c config\config.xml -p packages Windows-Setup.exe -v
      - uses: actions/upload-artifact@v3
        name: Upload builded app
        with:
          name: Windows
          path: ${{ github.workspace }}/Windows-Setup.exe
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: windows
    name: Create\Update release
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: Windows
          path: ${{ github.workspace }}/Windows
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1.11.2
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          artifacts: "${{ github.workspace }}/Windows/Windows-Setup.exe"
          name: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: startsWith(github.ref, 'refs/tags/')
